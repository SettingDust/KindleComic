{"meta":{"title":"尘埃小屋","subtitle":"一个只会划水的咸鱼绿皮程序员的家","description":null,"author":"SettingDust","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"C#作业 - 书籍阅读器","slug":"C-作业-书籍阅读器","date":"2018-09-29T01:38:22.000Z","updated":"2018-09-29T07:01:17.701Z","comments":true,"path":"2018/09/29/C-作业-书籍阅读器/","link":"","permalink":"http://yoursite.com/2018/09/29/C-作业-书籍阅读器/","excerpt":"","text":"题目要求很简单，单页长度可设置，页数可选择没有具体说明文件是内置文本还是怎么样，我选择遍历同目录txt文件，实用性更好一些C#运行目录在bin\\Debug遍历代码如下123456DirectoryInfo Folder = new DirectoryInfo(&quot;.&quot;);foreach (FileInfo File in Folder.GetFiles())&#123; if (File.Extension.Equals(&quot;.txt&quot;)) this.listBox1.Items.Add(File.Name);&#125; 首先获取文件夹信息，然后遍历文件并确认文件扩展名即可，非常简单 这里做了一个没必要的操作，但是，面向对象天下第一XDDD不得不说C#这个命名方式让我Java出家的很是为难……（什么反人类的全部大写！C#家骆驼头抬得真高12345678910111213141516public class Book&#123; private string Name; private int Current; public Book(string Name) &#123; this.Name = Name; this.Current = 1; &#125; public string getNext() &#123; &#125;&#125; 接下来，考虑书籍文本可能有相对较大的文本量（当然目前作业是用不到的），考虑分段读取一下文本写的时候发现C#可以var变量，C#真香（虽然最后还是习惯性的都给类型了XDDD）目前Book类的形状顺带一提，VS的竖向选择是Alt+Shift，还是IDEA的滚轮键更好啊123456789101112131415161718192021222324252627282930public class Book&#123; private int Current; private FileStream FileStream; public Book() &#123; this.Current = 1; this.FileStream = File.OpenRead(Name); &#125; public int GetCurrent() &#123; return this.Current; &#125; public void SetCurrent(int Current) &#123; this.Current = Current; &#125; public string GetNext() &#123; int Length = Form1.form.GetLength(); Byte[] bytes = new Byte[Length]; FileStream.Position = Length * (Current++ - 1); FileStream.Read(bytes, 0, Length); return Encoding.Default.GetString(bytes); &#125;&#125; 之后需要做的是分页，很明显中文会有字符分割乱码的问题大概思路就是判断开头和结尾是否被分割然后+1-1的问题GB的wiki中可以看到 “高位字节”使用了0xA1–0xF7（把01–87区的区号加上0xA0），“低位字节”使用了0xA1–0xFE（把01–94加上0xA0）。 由于一级汉字从16区起始，汉字区的“高位字节”的范围是0xB0–0xF7，“低位字节”的范围是0xA1–0xFE，占用的码位是72*94=6768。其中有5个空位是D7FA–D7FE。 吃完饭回来搞好了，其实换一个类就可以读取字符了，我太蠢了，太不熟悉了 总结：历时5小时 效率极低 度娘 提取码：xdka","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/开发/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"作业","slug":"作业","permalink":"http://yoursite.com/tags/作业/"}]},{"title":"Hexo首页文章显示部分","slug":"Hexo首页文章显示部分","date":"2018-09-28T08:57:00.000Z","updated":"2018-09-29T03:08:14.736Z","comments":true,"path":"2018/09/28/Hexo首页文章显示部分/","link":"","permalink":"http://yoursite.com/2018/09/28/Hexo首页文章显示部分/","excerpt":"","text":"Hexo首页的部分显示是通过文章之中&lt;!--more--&gt;来判断是否隐藏之后文本网络搜寻一些方法可以实现，但是代码方面有些问题，自己实现一次，不算困难这里是next主题6.0之后的swig为开发带来很大困难，之前没有接触过，甚至没有开发过jade的经验，nodejs也不甚熟练不过经过摸索还是成功了，可配置的显示多少行代码如下123456789101112&#123;% set content = post.content %&#125;&#123;% set i = post.content.indexOf(&quot;&lt;p&gt;&quot;) %&#125;&#123;% set arr = [] %&#125;&#123;% set arr.length = theme.auto_excerpt.length %&#125;&#123;% for item in arr %&#125; &#123;% set i = content.indexOf(&quot;&lt;p&gt;&quot;, i + 1) %&#125;&#123;% endfor %&#125;&#123;% if i &lt; 0 %&#125; &#123;&#123; content &#125;&#125;&#123;% else %&#125; &#123;&#123; content.substring(0, i)&#125;&#125;&#123;% endif %&#125; 度娘","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/开发/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/前端/"}]},{"title":"《『乙女が結ぶ月夜の煌めき』 体験版》解包记录","slug":"《『乙女が結ぶ月夜の煌めき』-体験版》解包记录","date":"2018-09-28T04:05:00.000Z","updated":"2018-09-28T08:46:29.587Z","comments":true,"path":"2018/09/28/《『乙女が結ぶ月夜の煌めき』-体験版》解包记录/","link":"","permalink":"http://yoursite.com/2018/09/28/《『乙女が結ぶ月夜の煌めき』-体験版》解包记录/","excerpt":"","text":"通过游戏目录的查看，可以明显发现arc文件是资源文件，猜测Rio及Rio1为文本文件。首先尝试BandZip打开，明显不行23333333333 经过几个工具的测试，最终确认GARbro对新手很友好，非常容易，效果也ok，针对此游戏可用。直接提取到文件夹（此处建议解压到一个新的Rio文件夹中），发现文本为ws2文件，搜索如何解包 使用Notepad++ 的HexEditor查看文件，初步怀疑文本经过加密，寻找可用工具找到了FuckGalEngine项目下的ahdprc，github需要编译使用这里我最终使用了ahdprc命令行方式解包，但是GARbro相对没有编程基础的朋友更友好 把ahdprc和Rio.ws2放到同一文件夹执行如下命令12ahdprc arc Rio.arc -u -cahdprc ror -n 2 Rio\\*.ws2 两行代码就可以，第二行为位移GARbro会提取之后自动位移，这也是为什么更友好的原因ahdprc的编译浪费了很久的时间，一个神奇的错误，最终使用了一个编译成功的exe，文章末附上 以上解包arc完成，两种方法都可以，注意我解压的Rio1，重命名为Rio，名字不对不知为什么不可以解包。当然GARbro没有这个问题 按照顺序运行如下命令12md txtmd bin 创建两个文件夹 for %i in (Rio\\*.ws2) do ahdprc ws2 -i %i -t txt\\%~ni.txt -b bin\\%~nxi不是批处理哦注意这里，如果你是使用我上面的代码输出当然不用担心，如果没有，而且没有解压到Rio文件夹中，那就要修改Rio为你的路径了。这步成功之后查看txt文件夹，翻译即可 格式就是空心原文实心译文 123for %i in (txt\\*.txt) do ahdprc ws2 %i -o tf\\%~nximd Chsfor %i in (bin\\*.ws2) do ahdprc ws2 -b %i -t tf\\%~ni.txt -o Chs\\%~nxi 1&gt;&gt; log.txt 此步生成的log.txt会记录具体哪些行需要在新的字体中表现出来，做替换列表 ahdprc rep -l rep.txt tf\\*.txt 做好替换列表使用此命令进行替换 替换之后再次使用for %i in (bin\\*.ws2) do ahdprc ws2 -b %i -t tf\\%~ni.txt -o Chs\\%~nxi 1&gt;&gt; log.txt生成日志文件查看，循环直到正常为止 如果解包后文件存在非ws2文件，复制到Chs文件夹中，可以手动也可以继续命令行copy Rio\\Pan.dat Chs\\Pan.dat 最后一步，封包ahdprc arc -r Chs -c 至此，全部完成，但是替换列表目前不太清楚是什么，需要具体操作了。 2018/9/28 - 16:15","categories":[{"name":"Galgame","slug":"Galgame","permalink":"http://yoursite.com/categories/Galgame/"}],"tags":[{"name":"Galgame","slug":"Galgame","permalink":"http://yoursite.com/tags/Galgame/"},{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"},{"name":"记录","slug":"记录","permalink":"http://yoursite.com/tags/记录/"}]}]}